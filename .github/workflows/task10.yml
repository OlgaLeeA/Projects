name: Deploy Ansible, Build Docker Image, CI/CD Pipeline, and Deploy Decoder

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install and configure Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          echo "---" > inventory.ini
          echo " ansible_host=${{ secrets.REMOTE_HOST }} ansible_user=${{ secrets.REMOTE_USER }} " >> inventory.ini

      - name: Run Ansible playbook
        run: |
          ansible-galaxy collection install community.general
          ansible-playbook -i inventory.ini task8.yml

  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: deatend/cicd:new

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWD }}
            docker pull deatend/cicd:new
            docker stop decoder || true
            docker rm decoder || true
            docker run -d --name decoder --restart always deatend/cicd:new
