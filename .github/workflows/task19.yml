name: Deploy to AWS ec2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy 
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.4.6

    - name: Install Ansible
      run: sudo apt-get install ansible -y

    - name: Terraform Init
      run: |
        cd ./task19
        terraform init

    - name: Terraform Apply
      run: |
        cd ./task19
        terraform apply -auto-approve

    - name: Capture instance_public_ip with Terraform output
      id: tf_output
      run: |
        cd ./task19
        INSTANCE_PUBLIC_IP=$(terraform output -raw instance_public_ip)
        echo "Obtained IP: ${INSTANCE_PUBLIC_IP}"
        echo "INSTANCE_PUBLIC_IP=${INSTANCE_PUBLIC_IP}" >> $GITHUB_ENV
        echo "Updated environment variables:"
        cat $GITHUB_ENV

    - name: Create Ansible inventory file
      run: |
        echo "[ec2]" > inventory.ini
        echo "${INSTANCE_PUBLIC_IP} ansible_user=ubuntu" >> inventory.ini
   
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.AWS_SSH_PVT_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
   
    - name: Run Ansible Playbook
      run: ansible-playbook -i inventory.ini ./task19/playbook.yml 

    - name: Terraform Destroy
      if: always()
      run: |
        cd ./task19
        terraform destroy -auto-approve
